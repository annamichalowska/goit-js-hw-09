{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAiBH,SAASC,cAAc,oBACxCG,EAAcJ,SAASC,cAAc,sBAE3C,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA6BPR,EAAKe,iBAAiB,UAxBF,SAAAC,GAClBA,EAAMC,iBAUN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAGEC,GAHeH,EAALV,MAAWU,EAAJI,KAAYJ,EAANK,OAGXC,OAAOrB,EAAWsB,QAC9BC,EAAYF,OAAOpB,EAAeqB,OAClCE,EAAcH,OAAOnB,EAAYoB,OAE5BG,EAAI,EAAGA,GAAKD,EAAaC,IAChCtB,EAAcsB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBV,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBV,EAAAiC,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9Da,GAAaK,EAEfV,EAAMG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputDelayStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst submitClick = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let timeDelay = Number(inputDelay.value);\n  let stepDelay = Number(inputDelayStep.value);\n  let amountValue = Number(inputAmount.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, timeDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    timeDelay += stepDelay;\n  }\n  event.currentTarget.reset();\n};\n\nform.addEventListener('submit', submitClick);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputDelayStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","_elements","currentTarget","elements","timeDelay","step","amount","Number","value","stepDelay","amountValue","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.f2091dea.js.map"}